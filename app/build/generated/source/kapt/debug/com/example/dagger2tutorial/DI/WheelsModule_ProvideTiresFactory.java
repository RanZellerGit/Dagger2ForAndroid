// Generated by Dagger (https://google.github.io/dagger).
package com.example.dagger2tutorial.DI;

import com.example.dagger2tutorial.Models.Tires;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class WheelsModule_ProvideTiresFactory implements Factory<Tires> {
  private final WheelsModule module;

  public WheelsModule_ProvideTiresFactory(WheelsModule module) {
    this.module = module;
  }

  @Override
  public Tires get() {
    return provideTires(module);
  }

  public static WheelsModule_ProvideTiresFactory create(WheelsModule module) {
    return new WheelsModule_ProvideTiresFactory(module);
  }

  public static Tires provideTires(WheelsModule instance) {
    return Preconditions.checkNotNull(
        instance.provideTires(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
